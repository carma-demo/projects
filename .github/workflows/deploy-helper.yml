name: Deploy Helper

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - test

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v4

      - name: Run nx command to show affected projects
        uses: gh640/command-result-action@v1
        with:
          command: npx nx show projects --affected -t build --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }}
        id: myaction

      - name: Use output in subsequent steps
        run: |
          echo "Exit code: ${{ steps.myaction.outputs.exitCode }}"
          echo "Standard output: ${{ steps.myaction.outputs.stdout }}"
          echo "Standard error: ${{ steps.myaction.outputs.stderr }}"

      - name: Add values to project matrix
        run: |
          values=$(echo "${{ steps.myaction.outputs.stdout }}")
          IFS=$'\n' read -rd '' -a array <<<"$values"
          projects="[ 'test', ${array[*]} ]"
          echo "::set-env name=PROJECTS::${projects}"

      # - name: Get nx command
      #   run: echo "The selected color is ${{ steps.myaction.outputs.stdout }}"

      # - name: Run nx command to show affected projects
      #   id: affected_projects
      #   run: echo "AFFECTED_PROJECTS=$(npx nx show projects --affected -t build --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }})" >> "$GITHUB_OUTPUT"

      # - name: Run nx command and save output to file
      #   id: affected_projects
      #   run: |
      #     npx nx show projects --affected -t build --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }} > affected_projects.txt
      #   env:
      #     AFFECTED_PROJECTS_FILE: affected_projects.txt

      # - name: Run nx command and save output to environment variable
      #   id: affected_projects_file
      #   run: |
      #     affected_projects=$(npx nx show projects --affected -t build --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }})
      #     echo "::set-env name=AFFECTED_PROJECTS::$affected_projects"
