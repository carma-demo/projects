name: Deploy Helper

on:
  push:
    branches:
      - main

jobs:
  split_nx_projects:
    runs-on: ubuntu-latest
    outputs:
      project_list: ${{ steps.set_up_matrix.outputs.project_list }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v4

      - name: Run color
        id: selectesed_colors
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"

      - name: Get color
        env:
          SELECTED_COLOR: ${{ steps.selectesed_colors.outputs.SELECTED_COLOR }}
        run: echo "The selected color is $SELECTED_COLOR"

      - name: Run nx command to show affected projects
        uses: gh640/command-result-action@v1
        with:
          command: npx nx show projects --affected -t build --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }}
        id: myaction

      - name: Affected string
        run: echo "Affected string ${{ steps.myaction.outputs.stdout }}"

      - name: Clean affected string
        run: echo "Affected string ${{ steps.myaction.outputs.stdout }}" | tr '\t\n' ' '

      - name: Set up matrix
        id: set_up_matrix
        run: |
          cleaned_output=$(echo "${{ steps.myaction.outputs.stdout }}" | tr '\t\n' ' ')

          IFS=' ' read -r -a words <<< "$cleaned_output"

          json_array="["
          for word in "${words[@]}"
          do
            json_array+="\"$word\","
          done
          json_array="${json_array%,}"
          json_array+="]"

          echo "::set-output name=project_list::$json_array"

      - name: Show project list
        run: echo "The project list is ${{ steps.set_up_matrix.outputs.project_list }}"

    build:
    needs: split_nx_projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{fromJson(needs.split_nx_projects.outputs.project_list)}}

    steps:
      - name: Build ${{ matrix.project }}
        run: echo "Building ${{ matrix.project }}..."